<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yiming1234.NottinghamWall.mapper.TopicMapper">

    <!-- Insert Topic -->
    <insert id="insert" parameterType="cn.yiming1234.NottinghamWall.entity.Topic">
        INSERT INTO topic (id, content, authorID, createdAt, updatedAt, imgURLs, isDraft)
        VALUES (#{id}, #{content}, #{authorID}, #{createdAt}, #{updatedAt}, #{imgURLs, typeHandler=cn.yiming1234.NottinghamWall.typehandler.JsonTypeHandler}, #{isDraft})
    </insert>

    <!-- Update Topic -->
    <update id="update" parameterType="cn.yiming1234.NottinghamWall.entity.Topic">
        UPDATE topic
        <set>
            <if test="content != null">content = #{content},</if>
            <if test="authorID != null">authorID = #{authorID},</if>
            <if test="createdAt != null">createdAt = #{createdAt},</if>
            <if test="updatedAt != null">updatedAt = #{updatedAt},</if>
            <if test="imgURLs != null">imgURLs = #{imgURLs, typeHandler=cn.yiming1234.NottinghamWall.typehandler.JsonTypeHandler},</if>
            <if test="isDraft != null">isDraft = #{isDraft},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- Get Draft -->
    <select id="getDraft" parameterType="int" resultMap="topicResultMap">
        SELECT * FROM topic WHERE authorID = #{userId} AND isDraft = true
    </select>

    <select id="isExistDraft" resultType="java.lang.Boolean" parameterType="java.lang.Integer">
        SELECT COUNT(*) > 0
        FROM topic
        WHERE authorID = #{authorID} AND isDraft = true
    </select>

    <!-- Paginated Query -->
    <select id="pageQuery" parameterType="cn.yiming1234.NottinghamWall.dto.PageQueryDTO" resultMap="topicResultMap">
        SELECT * FROM topic
        <where>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
        </where>
        ORDER BY createdAt DESC
    </select>

    <!-- Get Topic by ID -->
    <select id="getTopicById" parameterType="int" resultMap="topicResultMap">
        SELECT * FROM topic WHERE id = #{id}
    </select>

    <resultMap id="topicResultMap" type="cn.yiming1234.NottinghamWall.entity.Topic">
        <id property="id" column="id" />
        <result property="content" column="content" />
        <result property="authorID" column="authorID" />
        <result property="createdAt" column="createdAt" />
        <result property="updatedAt" column="updatedAt" />
        <result property="imgURLs" column="imgURLs" typeHandler="cn.yiming1234.NottinghamWall.typehandler.JsonTypeHandler"/>
        <result property="isDraft" column="isDraft" />
    </resultMap>

    <select id="getPublishedTopicIds" parameterType="int" resultType="int">
        SELECT id
        FROM topic
        WHERE authorID = #{authorId}
    </select>

    <!-- Likes functionality -->
    <insert id="likeTopic">
        INSERT INTO `like` (topic_id, user_id)
        VALUES (#{topicId}, #{userId})
    </insert>

    <delete id="unlikeTopic">
        DELETE FROM `like`
        WHERE topic_id = #{topicId} AND user_id = #{userId}
    </delete>

    <select id="isLikeTopic" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM `like`
        WHERE topic_id = #{topicId} AND user_id = #{userId}
    </select>

    <select id="getLikeCount" resultType="int">
        SELECT COUNT(*)
        FROM `like`
        WHERE topic_id = #{topicId}
    </select>

    <!-- Collections functionality -->
    <insert id="collectTopic">
        INSERT INTO collection (topic_id, user_id)
        VALUES (#{topicId}, #{userId})
    </insert>

    <delete id="uncollectTopic">
        DELETE FROM collection
        WHERE topic_id = #{topicId} AND user_id = #{userId}
    </delete>

    <select id="isCollectTopic" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM collection
        WHERE topic_id = #{topicId} AND user_id = #{userId}
    </select>

    <select id="getCollectCount" resultType="int">
        SELECT COUNT(*)
        FROM collection
        WHERE topic_id = #{topicId}
    </select>

    <!-- Get collected topic IDs by user ID -->
    <select id="getCollectedTopicIds" parameterType="int" resultType="int">
        SELECT topic_id
        FROM collection
        WHERE user_id = #{id}
    </select>

    <!-- Get topics by a list of IDs -->
    <select id="getTopicsByIds" parameterType="list" resultMap="topicResultMap">
        SELECT *
        FROM topic
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- Delete functionalities -->
    <delete id="deleteTopicLikes">
        DELETE FROM `like` WHERE topic_id = #{topicId}
    </delete>

    <delete id="deleteTopicCollections">
        DELETE FROM collection WHERE topic_id = #{topicId}
    </delete>

    <delete id="deleteTopicComments">
        DELETE FROM comment WHERE topic_id = #{topicId}
    </delete>

    <delete id="deleteTopic">
        DELETE FROM topic WHERE id = #{id}
    </delete>

</mapper>
